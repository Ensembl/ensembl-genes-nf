nextflow.enable.dsl=2
// Global default params, used in configs

params {
//input options
  help = false
  csvFile = null
  outDir = null
  repeatmodeler_output = null
  repeatmasker_output = null
  cacheDir = "${params.outDir}/cache"
  files_latency = '60'
  cleanup = true

  ncbiBaseUrl = "https://api.ncbi.nlm.nih.gov/datasets/v2alpha/genome/accession/"
  repeats_ftp_base = "http://ftp.ebi.ac.uk/pub/databases/ensembl/repeats/unfiltered_repeatmodeler/species/" 

  cleanCache = false //Default to false
  repeatmasker_path='/hps/software/users/ensembl/ensw/swenv/env/team-genebuild-v1/bin/RepeatMasker'
  repeatmodeler_path='/nfs/production/flicek/ensembl/genebuild/swati/softwares/dfam-tetools-latest.sif'
  //repeatmodeler_path='/hps/software/users/ensembl/ensw/swenv/env/team-genebuild-v1/bin/RepeatModeler'
  builddatabase_path='/hps/software/users/ensembl/ensw/swenv/env/team-genebuild-v1/bin/BuildDatabase'
  engine_repeatmasker = 'rmblast'
  engine_repeatmodeler = 'ncbi'
}

scratch = ''
workDir = ''

singularity {
  enabled = true
  autoMounts = true
  pullTimeout = '1 hour'
}

profiles {

  standard {
    executor {
      name = 'slurm'
      queueSize = 2000
      submitRateLimit = "10/1sec"
      queueGlobalStatus = true
      exitReadTimeout = "30 min"
    }

    process {
      clusterOptions = '-t 7-00:00:00 -e errlog.txt'
    }
  }
}

process {
  errorStrategy = { task.exitStatus in [104, 137, 140, 143] ? 'retry' : 'terminate' }
  maxRetries = 3
  cache = 'lenient'

  withLabel: 'default' {
    cpus = 1
    memory = { 3.GB * task.attempt }
    time = { 1.h * task.attempt }
    afterScript = { "sleep 60" }
  }

  withLabel: 'fetch_file' {
    cpus = 4
    memory = { 100.GB * task.attempt }
    time = { 2.h * task.attempt }
  }

  withLabel: 'repeatmodeler' {
    cpus = 24
    memory = { 128.GB * task.attempt }
    time = { 4.h * task.attempt }
  }

  withLabel: 'run_repeatmasker' {
    cpus = 10
    memory = {100.GB * task.attempt }
    time = {4.h * task.attempt }
  }

    withLabel: 'python' {
    cpus = 2
    memory = { 10.GB * task.attempt }
    time = { 10.h * task.attempt }
    module = 'singularity-3.7.0-gcc-9.3.0-dp5ffrp'
    container = 'python:3.9.19'
  }
}
